<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extensible="true" implements="ui:hasContextComponent" support="PROTO" description="Component that could be a drop target in drag and drop operation.">
	
	<aura:import library="ui:dragAndDropLib" property="lib" />
	
	<aura:attribute name="types" type="String[]" default="move" description="Supported operation types: can be either copy, link, or move."/>
	<aura:attribute name="dragOverInterval" type="Integer" default="500" description="Interval in milliseconds for how often dragOver event will be fired."/>
	
	<aura:attribute name="class" type="String" default="" description="Additional CSS style to be attached to the component."/>
	<aura:attribute name="dragOverClass" type="String" default="" description="Additional CSS style to be attached to this component while it's being dragged over."/>
	<aura:attribute name="dragOverAccessibilityClass" type="String" default="" description="Additional CSS style to be attached to this component while it's being dragged over in accessibility mode. It's defaulted to dragOverClass attribute if it's unspecified."/>
	
	<aura:attribute name="label" type="String" description="Label for this component. It's primarily used for accessibility."/>
	<aura:attribute name="ariaDropEffect" type="String" default="none" access="public" description="Indicate what operation this component is capable of receiving."/>
	
	<aura:registerEvent name="dragEnter" type="ui:dragEvent" description="Event fired when a dragged component enters this drop target."/>
	<aura:registerEvent name="dragOver" type="ui:dragEvent" description="Event fired when a dragged component is hovered over this drop target."/>
	<aura:registerEvent name="dragLeave" type="ui:dragEvent" description="Event fired when a dragged component leaves this drop target."/>
	<aura:registerEvent name="drop" type="ui:dragEvent" description="Event fired when a component is dropped on this drop target."/>
		
	<aura:method name="enterDragOperation" action="{!c.enterDragOperation}" access="public"/>
	<aura:method name="exitDragOperation" action="{!c.exitDragOperation}" access="public"/>
	
	<aura:method name="fireDragEnter" action="{!c.fireDragEnter}" access="public">
		<aura:attribute name="target" type="Object" description="The event target for dragend."/>
		<aura:attribute name="isInAccessibilityMode" type="Boolean" default="true" description="Set to true if drag and drop operation is initiated in accessibility mode, i.e. through keyboard interaction."/>
	</aura:method>
	
	<aura:method name="fireDragLeave" action="{!c.fireDragLeave}" access="public">
		<aura:attribute name="target" type="Object" description="The event target for dragend."/>
		<aura:attribute name="isInAccessibilityMode" type="Boolean" default="true" description="Set to true if drag and drop operation is initiated in accessibility mode, i.e. through keyboard interaction."/>
	</aura:method>
	
	<aura:method name="fireDrop" action="{!c.fireDrop}" access="public">
		<aura:attribute name="target" type="Object" description="The event target for dragend."/>
		<aura:attribute name="dragComponents" type="Aura.Component[]" required="true" description="The drag components that are dropped."/>
		<aura:attribute name="isInAccessibilityMode" type="Boolean" default="true" description="Set to true if drag and drop operation is initiated in accessibility mode, i.e. through keyboard interaction."/>
	</aura:method>
	
	<div aria-dropeffect="{!v.ariaDropEffect}" class="{!v.class}"
		 ondragenter="{!c.handleDragEnter}" ondragover="{!c.handleDragOver}" ondragleave="{!c.handleDragLeave}" ondrop="{!c.handleDrop}">
		{!v.body}
	</div>
	
</aura:component>
